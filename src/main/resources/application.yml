server:
  port: ${PORT:8080}

authorize:
  http:
    requests:
      permit-all: ${REQUESTS_PERMITTED}
      authenticated: ${REQUESTS_AUTHENTICATED}
      deny-all: ${REQUESTS_DENIED}

security:
  jwt:
    token:
      secret-key: ${SECRET_KEY}
      expire-length: ${EXPIRE_KEY}

cors:
  origin-patterns: ${ORIGIN_CORS}

spring:
  application:
    name: labtrack-service
  profiles:
    active: @profileActive@
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob:
          non_contextual_creation: true
    show-sql: false

# dev configuration
---
spring:
  config:
    activate:
      on-profile: dev
    import: optional:file:.env[.properties]

# h2 configuration
---
spring:
  config:
    activate:
      on-profile: h2
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:labtrackdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true
      path: /h2-console
